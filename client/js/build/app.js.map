{"version":3,"file":null,"sources":["/Users/joshua/learnspace/web130_newspaper/client/js/articles/queries.js","/Users/joshua/learnspace/web130_newspaper/client/js/articles/display.js","/Users/joshua/learnspace/web130_newspaper/client/js/articles/home.js","/Users/joshua/learnspace/web130_newspaper/client/js/articles/campus.js","/Users/joshua/learnspace/web130_newspaper/client/js/articles/create.js","/Users/joshua/learnspace/web130_newspaper/client/js/auth/queries.js","/Users/joshua/learnspace/web130_newspaper/client/js/auth/login.js","/Users/joshua/learnspace/web130_newspaper/client/js/build/temp.js"],"sourcesContent":["// All articles\nexport const getAllArticles = `\n    query getAllArticles {\n        viewer {\n            allArticles{\n                edges {\n                    node {\n                        id\n                        title\n                        content\n                        category\n                        author {\n                            id\n                            name\n                        }\n                    }\n                }\n            }\n        }\n    }`;\n\n// Get category articles\nexport const getCategoryArticles = `\n    query getCategoryArticles($where: ArticleWhereArgs) {\n        viewer {\n            allArticles(where: $where) {\n                edges {\n                    node {\n                        id\n                        title\n                        content\n                        category\n                        createdAt\n                        author {\n                            id\n                            name\n                        }\n                    }\n                }\n            }\n        }\n    }`;\n\n// Create new article\nexport const createArticle = `\n    mutation createArticleQuery($input: CreateArticleInput!) {\n        createArticle(input: $input) {\n            changedArticle {\n                id\n                modifiedAt\n                title\n                content\n                category\n                author {\n                    id\n                    name\n                }\n            }\n        }\n    }`;\n","const MAX_ARTICLES = 5;\n\nexport let displayArticles = (articles) => {\n    let numberToDisplay = Math.min(articles.length, MAX_ARTICLES),\n        i;\n    for (i = 0; i < numberToDisplay; i++) {\n        let article = articles[i],\n            $elem = $('#article-'+ (i + 1));\n        $elem.find('h1, h2').html(article.title);\n        $elem.find('article').html(article.content);\n    }\n};\n","import { getAllArticles } from './queries';\nimport { displayArticles } from './display';\n\n\nif (js_page == 'home_page') {\n    $.ajax({\n        type: \"POST\",\n        url: \"https://us-west-2.api.scaphold.io/graphql/sct-course\",\n        data: JSON.stringify({\n            query: getAllArticles\n        }),\n        contentType: 'application/json',\n        success: function(response) {\n            let articles = [];\n            if (response.hasOwnProperty('data')) {\n                let articleEdges = response.data.viewer.allArticles.edges;\n                for (var article of articleEdges) {\n                    articles.push(article.node);\n                }\n            }\n            \n            displayArticles(articles);\n        }\n    });\n}\n","import { getCategoryArticles } from './queries';\nimport { displayArticles } from './display';\n\n\nif (js_page == 'campus_page') {\n\n    let campusFilter = {\n        \"where\": {\n            \"category\": {\n                \"eq\": \"Campus\"\n            }\n        }\n    };\n\n    $.ajax({\n        type: \"POST\",\n        url: \"https://us-west-2.api.scaphold.io/graphql/sct-course\",\n        data: JSON.stringify({\n            query: getCategoryArticles,\n            variables: campusFilter\n        }),\n        contentType: 'application/json',\n        success: function(response) {\n            let articles = [];\n            if (response.hasOwnProperty('data')) {\n                let articleEdges = response.data.viewer.allArticles.edges;\n                for (var article of articleEdges) {\n                    articles.push(article.node);\n                }\n            }\n\n            displayArticles(articles);\n        }\n    });\n}\n","import { createArticle } from './queries';\n\nlet createData = (title, category, content) => {\n    return {\n        \"input\": {\n            \"authorId\": Cookies.get('userId'),\n            \"title\": title,\n            \"category\": category,\n            \"content\": content\n        }\n    };\n};\n\n\n$('#create-button').on('click', (event) => {\n    // Don't actually submit form\n    event.preventDefault();\n\n    let title = $('input[name=\"title\"]').val(),\n        category = $('[name=\"category\"]').val(),\n        content = $('[name=\"content\"]').val(),\n        data = createData(title, category, content);\n\n    $.ajax({\n        type: \"POST\",\n        url: \"https://us-west-2.api.scaphold.io/graphql/sct-course\",\n        data: JSON.stringify({\n            query: createArticle,\n            variables: data\n        }),\n        contentType: 'application/json',\n        headers: {\n            'Authorization': 'Bearer ' + Cookies.get('token')\n        },\n        success: function(response) {\n            if (response.hasOwnProperty('errors')) {\n                alert(response.errors[0].message);\n            } else if (response.hasOwnProperty('data')) {\n                console.log(response.data);\n            }\n        },\n        error: function(response) {\n            if (response.hasOwnProperty('errors')) {\n                alert(response.errors[0].message);\n            }\n        }\n    });\n});","\n// Login query\nexport const loginUser = `\n    mutation loginUserQuery($input: LoginUserInput!) {\n        loginUser(input: $input) {\n            token\n            user {\n                id\n                username\n                name\n            }\n        }\n    }`;","import { loginUser } from './queries';\n\nlet loginData = (username, password) => {\n    return {\n        \"input\": {\n            \"username\": username,\n            \"password\": password\n        }\n    };\n};\n\nlet processLogin = (user, token) => {\n    // Set session cookie\n    Cookies.set('userId', user.id);\n    Cookies.set('userName', user.name);\n    Cookies.set('token', token);\n    // For debugging purposes\n    console.log('userId - ' + user.id);\n    console.log('userName - ' + user.name);\n    console.log('token - ' + token);\n\n    window.location = createUrl();\n};\n\nlet createUrl = () => {\n    return window.location.href.replace('/login.html', '/create.html');\n};\n\n$('#login-button').on('click', (event) => {\n    // Don't actually submit form\n    event.preventDefault();\n\n    let username = $('input[name=\"username\"]').val(),\n        password = $('input[name=\"password\"]').val(),\n        data = loginData(username, password);\n\n    $.ajax({\n        type: \"POST\",\n        url: \"https://us-west-2.api.scaphold.io/graphql/sct-course\",\n        data: JSON.stringify({\n            query: loginUser,\n            variables: data\n        }),\n        contentType: 'application/json',\n        success: function(response) {\n            if (response.hasOwnProperty('errors')) {\n                alert(response.errors[0].message);\n            } else if (response.hasOwnProperty('data')) {\n                let loginUser = response.data.loginUser,\n                    token = loginUser.token,\n                    user = loginUser.user;\n                processLogin(user, token);\n            }\n        }\n    });\n});\n","import '../articles/home';\nimport '../articles/campus';\nimport '../articles/create';\n\n// Test cookies code.\nCookies.set('test', 'cookies work');\nimport '../auth/login';\nimport '../auth/logout';\n"],"names":["getAllArticles","getCategoryArticles","createArticle","MAX_ARTICLES","displayArticles","articles","numberToDisplay","Math","min","length","i","article","$elem","$","find","html","title","content","js_page","ajax","JSON","stringify","response","hasOwnProperty","articleEdges","data","viewer","allArticles","edges","push","node","campusFilter","createData","category","Cookies","get","on","event","preventDefault","val","errors","message","log","loginUser","loginData","username","password","processLogin","user","token","set","id","name","location","createUrl","window","href","replace"],"mappings":"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"}